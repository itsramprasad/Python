# Unit : 3

# 2. Write a NumPy program using NumPy methods - max, min, argmax,
# argmin, repr, count, bicount, unique.
# a) To extract all numbers from a given array which are less and greater than a specified number.
# b) To find the indices of the maximum and minimum numbers along the given axis of an array.

# Code for a:

import numpy as np
# Create a sample NumPy array
data = np.array([56, 45, 35, 78, 65, 23, 39, 55, 64, 89 ])
# Define the range to filter by
min_val = 10
max_val = 40
print("Original array:", data)
print(f"Filtering for numbers between {min_val} and {max_val}...")
# Use boolean indexing to create a mask for elements in the range
filtered_data = data[(data > min_val) & (data < max_val)]
print("Extracted numbers:", filtered_data)

# Output for a:

# Original array: [56 45 35 78 65 23 39 55 64 89]
# Filtering for numbers between 10 and 20...
# Extracted numbers: [35 23 39 ]

# Code for b:

import numpy as np
# Create a sample 2D NumPy array
arr = np.array([[10, 20, 5],
                [15, 3, 25],
                [30, 8, 12]])
print("Original array:")
print(arr)
# Find the indices of the maximum values along each row (axis=1)
max_indices = np.argmax(arr, axis=1)
# Find the indices of the minimum values along each row (axis=1)
min_indices = np.argmin(arr, axis=1)
print("\nIndices of the maximum values along each row:", max_indices)
print("Indices of the minimum values along each row:", min_indices)
# To verify, you can use these indices to get the actual max and min values
max_values = arr[np.arange(len(arr)), max_indices]
min_values = arr[np.arange(len(arr)), min_indices]
print("\nMaximum values:", max_values)
print("Minimum values:", min_values)

# Output for b:

# Original array:
# [[10 20  5]
#  [15  3 25]
#  [30  8 12]]

# Indices of the maximum values along each row: [1 2 0]
# Indices of the minimum values along each row: [2 1 1]

# Maximum values: [20 25 30]
# Minimum values: [ 5  3  8]


